#!/bin/bash

set -e

command="$1"
case "${command}" in
  itest_build_images)
      # this is needed to run itest
      docker build -f DockerfileAlpine -t ide-image-scripts:alpine .
      docker build -f DockerfileUbuntu -t ide-image-scripts:ubuntu .
      exit $?
      ;;
  itest_configs)
      # do not use the production ENTRYPOINT
      echo "IDE_DOCKER_OPTIONS=\"--entrypoint=/bin/bash\"" > ./Idefile.to_be_tested_configs
      echo "IDE_IDENTITY=\"$(pwd)/test/integration/test-files/ide_identities/full\"" >> ./Idefile.to_be_tested_configs
      echo "IDE_WORK=$(pwd)/test/integration/test-files/ide_work" >> Idefile.to_be_tested_configs

      echo "Testing image: ide-image-scripts:alpine"
      IDE_DOCKER_IMAGE="ide-image-scripts:alpine" bats "$(pwd)/test/integration/configs/bats"
      echo "Testing image: ide-image-scripts:ubuntu"
      IDE_DOCKER_IMAGE="ide-image-scripts:ubuntu" bats "$(pwd)/test/integration/configs/bats"
      exit $?
      ;;
  itest)
      # use the production ENTRYPOINT
      echo "IDE_IDENTITY=\"$(pwd)/test/integration/test-files/ide_identities/full\"" >> ./Idefile.to_be_tested
      echo "IDE_WORK=$(pwd)/test/integration/test-files/ide_work" >> Idefile.to_be_tested

      echo "Testing image: ide-image-scripts:alpine"
      IDE_DOCKER_IMAGE="ide-image-scripts:alpine" bats "$(pwd)/test/integration/end_user/bats"
      echo "Testing image: ide-image-scripts:ubuntu"
      IDE_DOCKER_IMAGE="ide-image-scripts:ubuntu" bats "$(pwd)/test/integration/end_user/bats"
      exit $?
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
