#!/bin/bash

# http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "${DIR}/ide_functions"
source "${DIR}/ide_version"

# This function is kept in this file because of usage of: $0
function helpfunc() {
    echo "Usage: $0 [--idefile IDEFILE] COMMAND"
    echo "  --help                           Help. Display this message and quit."
    echo "  --version                        Version. Print version number and quit."
    echo "  --idefile                        Specify IDEFILE, default is: ./Idefile"
    echo "  --dryrun                         Do not pull docker image, do not run docker run, verify Idefile."
    echo "  --pull_only                      Pull docker image, do not run docker run, do not verify Idefile."
    echo "  --force_not_interactive --not_i  Do not run docker containers interactively."
    echo "  --rm \"false\"                   Remove docker container afterwards. Default: true"
    exit
} # TODO: !!!

# default values
ide_command="run"

while (( $# > 0 ))
do
  case $1 in
  -c | --command)
    shift 1 # the value of ide command is under the next parameter, so now
    # $2 becomes: $1
    ide_command="$1"
    shift 1 # $2 is already assigned above, shift to turn $3 into $1
    ;;
  *)
    # assign the rest of parameters into other_options_array1
    # and stop the loop
    other_options_array=("$@")
    break
    ;;
  esac
done

log_debug "Starting ide, version: $version"
log_debug "ide_command: $ide_command"
# echo "other options: ${other_options_array[@]}" # TODO: make log_debug
# for opt in "${other_options_array[@]}" ; do
#   echo "one option is: $opt"
# done

case $ide_command in
help)
  helpfunc
  exit 0
  ;;
version)
  echo "$0 version $version"
  exit 0
  ;;
run)
  # passing array as bash function parameter, thanks to:
  # http://stackoverflow.com/a/4017175
  runfunc other_options_array[@]
  exit 0
  ;;
pull)
  pullfunc other_options_array[@]
  exit 0
  ;;
*)
  log_error "Unsupported IDE command: ${ide_command}"
  exit 1
esac

exit 0
